/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author kathe
 */
public class Examen extends javax.swing.JFrame {
 private static String[] numerosCuenta = {"12345", "67890", "13579", "24680", "97531"};
    private static String[] pines = {"1111", "2222", "3333", "4444", "5555"};
    private static double[] saldos = {1000.0, 2000.0, 3000.0, 4000.0, 5000.0};
     private static final double[] balance = {0.0, 0.0, 0.0, 0.0, 0.0};
     private int indiceUsuarioAutenticado = -1;
    private Component frame;
    private static String[] numerosCuentaDolares = {"54321", "09876", "97531"};  // Números de cuenta en dólares existentes
private static double[] saldosDolares = {100.0, 200.0, 300.0};  // Saldos en dólares de las cuentas existentes

    /**
     * Creates new form NewJFrame
     */
    public Examen() {
        initComponents();
       
    
        balanceButton.setEnabled(false);

        retirarButton.setEnabled(false);
      
        depositarButton.setEnabled(false);
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        autenticarButton = new javax.swing.JButton();
        balanceButton = new javax.swing.JButton();
        retirarButton = new javax.swing.JButton();
        comprarVenderDolaresButton = new javax.swing.JButton();
        salirButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cuentaTextField = new javax.swing.JTextField();
        pinPasswordField = new javax.swing.JPasswordField();
        mensajeLabel = new javax.swing.JLabel();
        depositarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 204));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        autenticarButton.setText("Autentificar");
        autenticarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autenticarButtonActionPerformed(evt);
            }
        });

        balanceButton.setText("Ver Balance");
        balanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceButtonActionPerformed(evt);
            }
        });

        retirarButton.setText("Retiro ");
        retirarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirarButtonActionPerformed(evt);
            }
        });

        comprarVenderDolaresButton.setText(" comprar o vender dólares");
        comprarVenderDolaresButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprarVenderDolaresButtonActionPerformed(evt);
            }
        });

        salirButton.setBackground(new java.awt.Color(255, 0, 0));
        salirButton.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        salirButton.setForeground(new java.awt.Color(255, 255, 255));
        salirButton.setText("Salir");
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        cuentaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuentaTextFieldActionPerformed(evt);
            }
        });

        mensajeLabel.setText("Ingrese su numero de cuenta y su pin");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pinPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cuentaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mensajeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(mensajeLabel)
                .addGap(49, 49, 49)
                .addComponent(cuentaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(pinPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
        );

        depositarButton.setText("Deposito");
        depositarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(depositarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(balanceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(autenticarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(retirarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comprarVenderDolaresButton, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(208, 208, 208))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(autenticarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(balanceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(depositarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(retirarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(comprarVenderDolaresButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 753, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void cuentaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuentaTextFieldActionPerformed
    
    }//GEN-LAST:event_cuentaTextFieldActionPerformed

    private void autenticarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autenticarButtonActionPerformed
        String numeroCuenta = cuentaTextField.getText();
        String pin = new String(pinPasswordField.getPassword());

        try {
            indiceUsuarioAutenticado = verificarCredenciales(numeroCuenta, pin);

            if (indiceUsuarioAutenticado == -1) {
                JOptionPane.showMessageDialog(this, "Credenciales inválidas. Por favor, intente nuevamente.");
            } else {
                mensajeLabel.setText("Autenticación exitosa. Seleccione una opción.");
                cuentaTextField.setEnabled(false);
                pinPasswordField.setEnabled(false);
                autenticarButton.setEnabled(false);
                balanceButton.setEnabled(true);
                retirarButton.setEnabled(true);
                depositarButton.setEnabled(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al autenticar al usuario. Por favor, intente nuevamente.");
        }
    }//GEN-LAST:event_autenticarButtonActionPerformed

    private void retirarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirarButtonActionPerformed
        try {
            double cantidad = Double.parseDouble(JOptionPane.showInputDialog(this, "Ingrese la cantidad a retirar:"));

            if (cantidad > 0 && cantidad <= saldos[indiceUsuarioAutenticado]) {
                saldos[indiceUsuarioAutenticado] -= cantidad;
                JOptionPane.showMessageDialog(this, "Retiro exitoso. Retiró " + cantidad + " de dolares, no olvide su tardejeta.");
            } else {
                JOptionPane.showMessageDialog(this, "Fondos insuficientes. No se pudo realizar el retiro.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Cantidad inválida. No se pudo realizar el retiro.");
        }
    
    }//GEN-LAST:event_retirarButtonActionPerformed

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
         if (JOptionPane.showConfirmDialog(frame, "¿Realmente deseas Salir?", 
                "ATM Systems",
            JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION){
        System.exit(0);
        }
              
    }//GEN-LAST:event_salirButtonActionPerformed

    private void balanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceButtonActionPerformed
         
          JOptionPane.showMessageDialog(this, "Su saldo actual es: $" + saldos[indiceUsuarioAutenticado]
                + "\nSu balance pendiente es: $" + balance[indiceUsuarioAutenticado]);
    }//GEN-LAST:event_balanceButtonActionPerformed

    private void depositarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositarButtonActionPerformed
       try {
            double cantidad = Double.parseDouble(JOptionPane.showInputDialog(this, "Ingrese la cantidad a depositar:"));

            if (cantidad > 0) {
              balance[indiceUsuarioAutenticado] += cantidad;
                JOptionPane.showMessageDialog(this, "Depósito exitoso. Depositó " + cantidad + " unidades.");
            } else {
                JOptionPane.showMessageDialog(this, "Cantidad inválida. No se pudo realizar el depósito.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Cantidad inválida. No se pudo realizar el depósito.");
        }
    }//GEN-LAST:event_depositarButtonActionPerformed

    private void comprarVenderDolaresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprarVenderDolaresButtonActionPerformed
                                                          
                                                       
    String[] opciones = {"Comprar", "Vender"};
    int opcionSeleccionada = JOptionPane.showOptionDialog(this, "Seleccione una opción:", "Comprar o Vender", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);

    if (opcionSeleccionada == 0) {
        // Lógica para realizar la compra de dólares
        double cantidadDolares = Double.parseDouble(JOptionPane.showInputDialog(this, "Ingrese la cantidad de dólares a comprar:"));

        if (cantidadDolares > 0) {
            // Lógica para procesar la compra de dólares, como calcular el tipo de cambio y actualizar el saldo de la cuenta en dólares correspondiente
            // Aquí puedes agregar tu propia lógica, como actualizar los arreglos de cuentas en dólares con la nueva compra

            JOptionPane.showMessageDialog(this, "Compra exitosa. Usted ha comprado " + cantidadDolares + " dólares.");
        } else {
            JOptionPane.showMessageDialog(this, "Cantidad inválida. La compra no se pudo realizar.");
        }
    } else if (opcionSeleccionada == 1) {
        // Lógica para realizar la venta de dólares
        double cantidadDolares = Double.parseDouble(JOptionPane.showInputDialog(this, "Ingrese la cantidad de dólares a vender:"));

        if (cantidadDolares > 0) {
            // Lógica para procesar la venta de dólares, como calcular el tipo de cambio y actualizar el saldo de la cuenta en dólares correspondiente
            // Aquí puedes agregar tu propia lógica, como actualizar los arreglos de cuentas en dólares con la nueva venta

            JOptionPane.showMessageDialog(this, "Venta exitosa. Usted ha vendido " + cantidadDolares + " dólares.");
        } else {
            JOptionPane.showMessageDialog(this, "Cantidad inválida. La venta no se pudo realizar.");
        }
    }


                                                      
    
   
    
    }//GEN-LAST:event_comprarVenderDolaresButtonActionPerformed




    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Examen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Examen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Examen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Examen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Examen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton autenticarButton;
    private javax.swing.JButton balanceButton;
    private javax.swing.JButton comprarVenderDolaresButton;
    private javax.swing.JTextField cuentaTextField;
    private javax.swing.JButton depositarButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel mensajeLabel;
    private javax.swing.JPasswordField pinPasswordField;
    private javax.swing.JButton retirarButton;
    private javax.swing.JButton salirButton;
    // End of variables declaration//GEN-END:variables

    private int verificarCredenciales(String numeroCuenta, String pin) {
        for (int i = 0; i < numerosCuenta.length; i++) {
            if (numerosCuenta[i].equals(numeroCuenta) && pines[i].equals(pin)) {
                return i;
            }
        }

        return -1;
    }

    
}
//